@{
    Layout = null;
    string id = Convert.ToString(ViewBag.ID);
    string sn = ViewBag.Sn;
}
@using _1Fix.Entity
@model List<CheckImages>
<div class="modal-header">
    <button aria-hidden="true" data-dismiss="modal" class="close" type="button">&times;</button>
    <h4 class="modal-title">编辑图片</h4>
</div>
<div class="modal-body">
    <div class="row">
        <div class="col-xs-12">
            @if (false)
            {
                <div>暂无数据</div>
            }
            else
            {
                <div class="form-group">
                    <label class="col-sm-3 control-label">IMEI：<span class="asterisk"></span></label>
                    <div class="col-sm-9">
                        @sn
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">选择图片：<span class="asterisk"></span></label>
                    <div class="col-sm-9">
                        <button class="btn btn-black" id="browse">选择文件</button>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-12">
                        <ul id="file-list" class="file-image">
                            @if (Model != null && Model.Count > 0)
                            {
                                foreach (var item in Model)
                                {
                                    <li id="file-@(item.ID)" class="tp-icon">
                                        <p class="file-name"></p>
                                        <p class="progress"></p>
                                        <img class="img-responsive" src="http://jy.1fix.cn/upload/@(item.Sn)/@(item.Image)">
                                        <span class="badge img-close" id="@item.ID" onclick="del(this)"><span class="fa fa-times-circle"></span></span>
                                        <span class="fa fa-check-circle img-success"></span>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            }
        </div>

    </div>

</div>
<div class="modal-footer">
    <input type="hidden" name="id" value="@id" />
    <button data-dismiss="modal" class="btn btn-default" type="button">关闭</button>
    <button id="start_upload" class="btn btn-primary">开始上传</button>
</div>
<link href="/plupload/jquery.plupload.queue/css/jquery.plupload.queue.css" type="text/css" rel="stylesheet" media="screen">
<script src="/plupload/plupload.full.min.js" type="text/javascript"></script>
<script src="/plupload/jquery.plupload.queue/jquery.plupload.queue.min.js" type="text/javascript"></script>
<script type="text/javascript">
    var sn = "@sn";
    //实例化一个plupload上传对象
    var uploader = new plupload.Uploader({
        browse_button: 'browse', //触发文件选择对话框的按钮，为那个元素id
        url: '/Plupload/Upload?sn=' + sn, //服务器端的上传页面地址
        flash_swf_url: '/plupload/Moxie.swf', //swf文件，当需要使用swf方式进行上传时需要配置该参数
        silverlight_xap_url: '/plupload/Moxie.xap', //silverlight文件，当需要使用silverlight方式进行上传时需要配置该参数
        filters: {
            max_file_size: '10mb',
            // Specify what files to browse for
            mime_types: [
                { title: "Image files", extensions: "jpg,gif,png" }
            ]
        }
    });

    //在实例对象上调用init()方法进行初始化
    uploader.init();

    //绑定各种事件，并在事件监听函数中做你想做的事
    uploader.bind('FilesAdded', function (uploader, files) {
        //每个事件监听函数都会传入一些很有用的参数，
        //我们可以利用这些参数提供的信息来做比如更新UI，提示上传进度等操作
        for (var i = 0, len = files.length; i < len; i++) {
            var file_name = files[i].name; //文件名
            //构造html来更新UI
            var html = '<li class="tp-icon" id="file-' + files[i].id + '"><p class="file-name"></p><p class="progress"></p></li>';
            $(html).appendTo('#file-list');
            !function (i) {
                previewImage(files[i], function (imgsrc) {
                    $('#file-' + files[i].id).append('<img class="img-responsive" src="' + imgsrc + '" />');
                })
            }(i);
        }
    });
    uploader.bind('UploadProgress', function (uploader, file) {
        //每个事件监听函数都会传入一些很有用的参数，
        //我们可以利用这些参数提供的信息来做比如更新UI，提示上传进度等操作
    });
    uploader.bind('FileUploaded', function (uploader, file, response) {
        //每个事件监听函数都会传入一些很有用的参数，
        //我们可以利用这些参数提供的信息来做比如更新UI，提示上传进度等操作
        if (response.response == "") {
            //alert("上传失败");
        } else {
            var json = eval('(' + response.response + ')');
            $('#file-' + file.id).append('<span class="badge img-close" id="'+json.id+'" onclick="del(this)"><span class="fa fa-times-circle"></span></span><span class="fa fa-check-circle img-success"></span>');
        }
    });
    uploader.bind('UploadComplete', function (uploader, file) {
        //每个事件监听函数都会传入一些很有用的参数，
        //我们可以利用这些参数提供的信息来做比如更新UI，提示上传进度等操作
        alert("上传完成");
    });
    //......
    //......

    //最后给"开始上传"按钮注册事件
    document.getElementById('start_upload').onclick = function () {
        uploader.start(); //调用实例对象的start()方法开始上传文件，当然你也可以在其他地方调用该方法
    }

    //plupload中为我们提供了mOxie对象
    //有关mOxie的介绍和说明请看：https://github.com/moxiecode/moxie/wiki/API
    //如果你不想了解那么多的话，那就照抄本示例的代码来得到预览的图片吧
    function previewImage(file, callback) {//file为plupload事件监听函数参数中的file对象,callback为预览图片准备完成的回调函数
        if (!file || !/image\//.test(file.type)) return; //确保文件是图片
        if (file.type == 'image/gif') {//gif使用FileReader进行预览,因为mOxie.Image只支持jpg和png
            var fr = new mOxie.FileReader();
            fr.onload = function () {
                callback(fr.result);
                fr.destroy();
                fr = null;
            }
            fr.readAsDataURL(file.getSource());
        } else {
            var preloader = new mOxie.Image();
            preloader.onload = function () {
                preloader.downsize(300, 300);//先压缩一下要预览的图片,宽300，高300
                var imgsrc = preloader.type == 'image/jpeg' ? preloader.getAsDataURL('image/jpeg', 80) : preloader.getAsDataURL(); //得到图片src,实质为一个base64编码的数据
                callback && callback(imgsrc); //callback传入的参数为预览图片的url
                preloader.destroy();
                preloader = null;
            };
            preloader.load(file.getSource());
        }
    }
    //删除图片
    function del(obj) {
        var id = $(obj).attr("id");
        $.ajax({
            type: "post",
            url: "/Consignment/DelPhoneImage",
            data: { id: id},
            success: function (data) {
                if (data.status > 0) {
                    $(obj).parent("li.tp-icon").fadeIn().remove();
                    //alert("删除成功");
                } else {
                    alert("删除失败");
                }
            }
        });
    }
</script>
